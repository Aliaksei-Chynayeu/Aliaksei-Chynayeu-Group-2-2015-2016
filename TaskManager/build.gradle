apply plugin: 'java' 
apply plugin: 'application' 
apply plugin: 'eclipse' 
apply plugin: 'checkstyle' 
apply plugin: 'jacoco' 
apply plugin: 'findbugs' 

sourceCompatibility = 1.6 

mainClassName = "com.epam.jmp.taskmanager.run.App" 
repositories { 
	mavenCentral() 
} 


dependencies { 
	compile fileTree(dir: './src/main/resources/libs', include: ['*.jar']) 
	compile 'com.puppycrawl.tools:checkstyle:6.15' 
} 

task appJar (type: Jar, dependsOn: classes) { 
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } 
		manifest { 
			attributes 'Main-Class': 'com.epam.jmp.taskmanager.run.App' 
		} 
} 

tasks.withType(Checkstyle) {
    configFile = rootProject.file("config/checkstyle/sun.xml");
    ignoreFailures = true
  	reports {
  		xml.enabled = true
    	xml.destination rootProject.file("reports/checkstyle/checkstyle.xml")
  	}
}

findbugs {
	//toolVersion = "2.0.3" // findbugs toolversion for Java 1.6
	ignoreFailures = true 
	effort = "max" 
	reportLevel = "medium" 
	
}
task findbugsSecurity(type: FindBugs, dependsOn: classes) { 
	classes = files("$project.buildDir/classes") 
	source = fileTree(dir: 'src', include: '**/*.java') 
	classpath = files() 
	reports { 
		xml.enabled = false 
		html.enabled = true 
		html.destination rootProject.file("/reports/findbugs/findbugs.html") 
	} 
} 

test { 
	reports { 
		junitXml.enabled = false 
		html.enabled = true 
		html.destination rootProject.file("reports/passRates") 
	} 
} 


task appJacocoTestReport(type: JacocoReport, dependsOn: test) {
	reports { 
		xml.enabled false 
		csv.enabled false 
		html.enabled true 
		html.destination "reports/jacoco/jacocoHtml" 
	} 
	classDirectories = fileTree(
			dir: './build/classes/main'
	)
	  sourceDirectories = files('src/main/java')
	  executionData = files("reports/jacoco/jacocoTest.exec")
	  test { 
			jacoco { 
				destinationFile = file("reports/jacoco/jacocoTest.exec") 
			} 
	  } 
}


task appJavaDoc(type: Javadoc) {
	failOnError false
	source = sourceSets.main.allJava
	destinationDir = rootProject.file("reports/javadoc")
}

build.dependsOn appJar
appJar.dependsOn appJacocoTestReport
appJacocoTestReport.dependsOn findbugsSecurity
jacocoTestReport.dependsOn test
test.dependsOn classes
build.dependsOn appJavaDoc

