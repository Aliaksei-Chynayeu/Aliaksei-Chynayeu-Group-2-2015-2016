apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'sonar'
apply plugin: 'sonar-runner'

sourceCompatibility = 1.8

mainClassName = "com.epam.jmp.taskmanager.run.App"
repositories {
    mavenCentral()
    
}


dependencies {
    compile fileTree(dir: './src/main/resources/libs', include: ['*.jar'])
    compile 'com.puppycrawl.tools:checkstyle:6.15'
}

jar {
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	manifest {
		attributes 'Main-Class': 'com.epam.jmp.taskmanager.run.App'
	}
}

tasks.withType(Checkstyle) {
    configFile = rootProject.file("config/checkstyle/sun.xml");
    ignoreFailures = true
  	reports {
  		xml.enabled = true
    	xml.destination rootProject.file("reports/checkstyle/checkstyle.xml")
  	}
}
tasks.withType(FindBugs) {
	ignoreFailures = true
	effort = "max"
	reportLevel = "medium"
    classes = files("$project.buildDir/classes")
    source = fileTree(dir: 'src', include: '**/*.java')
    classpath = files() 
    reports {
        xml.enabled = false
        html.enabled = true
        html.destination rootProject.file("/reports/findbugs/findbugs.html")
    }
 }

test {
    reports {
        junitXml.enabled = false
        html.enabled = true
        html.destination rootProject.file("reports/passRates")
    }  
    
}

sonar {
	server {
	    url = "http://sonar.someserver.int"
	}
	database {
	    url = "jdbc:mysql://sonar.someserver.int:3306/sonar"
	    driverClassName = "com.mysql.jdbc.Driver"
	    username = "admin"
	    password = "admin"
	}
}

sonarRunner {
	sonarProperties {
	    property "sonar.host.url", "http://sonar.someserver.int"
	    property "sonar.jdbc.url", "jdbc:mysql://sonar.someserver.int:3306/sonar"
	    property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
	    property "sonar.jdbc.username", "admin"
	    property "sonar.jdbc.password", "admin"

	    //added these properties to my gradle.build
	    property "sonar.projectKey", "GradleAndroidTest"
	    property "sonar.projectName", "GradleAndroidTest"
	    property "sonar.projectVersion", "V1.0"
	    property "sonar.language", "java"
	    property "sonar.sources", "src"
	    property "sonar.binaries", "build"
	}
}

test {
        jacoco {
        
            destinationFile = file("reports/jacoco/jacocoTest.exec")
          
        }
}
